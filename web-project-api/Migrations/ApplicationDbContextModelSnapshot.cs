// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web_project_api.app.DbContextInit;

#nullable disable

namespace web_project_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("web_project_api.app.Model.Allocation", b =>
                {
                    b.Property<int>("AllocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AllocationName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CurrentTradeId")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("AllocationId");

                    b.HasIndex("CurrentTradeId");

                    b.ToTable("Allocations");
                });

            modelBuilder.Entity("web_project_api.app.Model.Trade", b =>
                {
                    b.Property<int>("TradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TradeStatusCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TradingDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TradeId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("web_project_api.app.Model.Allocation", b =>
                {
                    b.HasOne("web_project_api.app.Model.Trade", "Trade")
                        .WithMany("Allocations")
                        .HasForeignKey("CurrentTradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trade");
                });

            modelBuilder.Entity("web_project_api.app.Model.Trade", b =>
                {
                    b.Navigation("Allocations");
                });
#pragma warning restore 612, 618
        }
    }
}
